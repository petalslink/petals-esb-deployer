<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<!--
 Copyright (c) 2018-2021 Linagora
 
 This program/library is free software: you can redistribute it and/or modify
 it under the terms of the GNU Lesser General Public License as published by
 the Free Software Foundation, either version 2.1 of the License, or (at your
 option) any later version.
 
 This program/library is distributed in the hope that it will be useful, but
 WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License
 for more details.
 
 You should have received a copy of the GNU Lesser General Public License
 along with this program/library; If not, see http://www.gnu.org/licenses/
 for the GNU Lesser General Public License version 2.1.
-->
<schema targetNamespace="http://petals.ow2.org/deployer/model/xml/1.0" version="1.0"
   xmlns="http://www.w3.org/2001/XMLSchema" xmlns:m="http://petals.ow2.org/deployer/model/xml/1.0"
   xmlns:bm="http://petals.ow2.org/deployer/model/bus/xml/1.0"
   xmlns:cr="http://petals.ow2.org/deployer/model/component-repository/xml/1.0"
   xmlns:sum="http://petals.ow2.org/deployer/model/service-unit/xml/1.0"
   xmlns:tm="http://petals.ow2.org/deployer/model/topology/xml/1.0" elementFormDefault="qualified">

   <import namespace="http://petals.ow2.org/deployer/model/component-repository/xml/1.0"
      schemaLocation="component-repository.xsd" />
   <import namespace="http://petals.ow2.org/deployer/model/bus/xml/1.0" schemaLocation="bus-model.xsd" />
   <import namespace="http://petals.ow2.org/deployer/model/service-unit/xml/1.0"
      schemaLocation="service-unit-model.xsd" />
   <import namespace="http://petals.ow2.org/deployer/model/topology/xml/1.0" schemaLocation="topology-model.xsd" />

   <element name="model" type="m:model" />

   <complexType name="model">
      <annotation>
         <documentation>
            Model defining Petals ESB buses to deploy. Documentation can be found here
            https://doc.petalslink.com/display/petalscomponents/Petals+ESB+Deployer+1.0.0
         </documentation>
      </annotation>
      <sequence>
         <element name="service-unit-model" type="sum:serviceUnitModel" minOccurs="1" maxOccurs="1">
            <annotation>
               <documentation>
                  This model defines a set of service units to deploy on your Petals ESB bus. This model
                  will be mainly written by development teams because they have the knowledge of service units to
                  deploy.
               </documentation>
            </annotation>
         </element>
         <element name="component-repository" type="cr:componentRepository" minOccurs="1" maxOccurs="1">
            <annotation>
               <documentation>
                  This model defines a set of binding components, service engines and shared libraries that
                  can be used to perform the deployment of a Petals ESB bus. Such models are included in Petals ESB
                  distribution packs, and you can write your own.
               </documentation>
            </annotation>
         </element>
         <element name="topology-model" type="tm:topologyModel" minOccurs="1" maxOccurs="1">
            <annotation>
               <documentation>
                  This model defines a set of topologies, used by Petals ESB buses. This model will be
                  mainly written by the Petals ESB bus architect.
               </documentation>
            </annotation>
         </element>
         <element name="bus-model" type="bm:busModel" minOccurs="1" maxOccurs="1">
            <annotation>
               <documentation>
                  This model defines your Petals ESB bus placing Petals ESB components on their containers:
                  - service unit on its Petals ESB container
                  - Petals ESB container on its machine
                  This model will be
                  mainly written by the Petals ESB bus architect in agreement with operators.
               </documentation>
            </annotation>
         </element>
      </sequence>
   </complexType>

</schema>
